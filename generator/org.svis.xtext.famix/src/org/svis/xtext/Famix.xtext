grammar org.svis.xtext.Famix with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate famix "http://www.svis.org/famix"

Root:
	document=Document?;

Document:
	{Document}
	'(' elements+=FAMIXElement* ')';
	
FAMIXElement:
	FAMIXStructure | FAMIXDictionaryData | FAMIXFileAnchor | FAMIXInvocation | FAMIXAttribute | FAMIXInheritance |
	FAMIXAccess | FAMIXNamespace | FAMIXMethod | FAMIXPrimitiveType | FAMIXComment | FAMIXParameter | FAMIXReference |
	FAMIXParameterizedType | FAMIXAnnotationInstance | FAMIXAnnotationInstanceAttribute | FAMIXAnnotationTypeAttribute |
	FAMIXLocalVariable | FAMIXImplicitVariable | FAMIXType | FAMIXParameterType |
	FAMIXJavaSourceLanguage | FAMIXDeclaredException | FAMIXThrownException | FAMIXCaughtException | FAMIXEnumValue | 
	FAMIXAntipattern | FAMIXPath | FAMIXRole | FAMIXComponent | 
	
	//ABAP
	FAMIXReport | FAMIXFormroutine | FAMIXFunctionModule | FAMIXTypeOf | FAMIXMacro 
;
	
FAMIXStructure:
	FAMIXClass | FAMIXParameterizableClass | FAMIXEnum | FAMIXAnnotationType |
	
	//ABAP
	FAMIXMessageClass | FAMIXFunctionGroup
;

//ABAP
FAMIXDictionaryData:
	FAMIXDomain | FAMIXDataElement | FAMIXTable | FAMIXTableElement | FAMIXABAPStruc | FAMIXStrucElement | 
	FAMIXTableType | FAMIXTableTypeElement 
	//| FAMIXVirtualDomain

;

/** Explanation of different identifiers
 * 
 * id: id created from VerveineJ, only unique within a FAMIX file
 * name: unqualified name
 * fqn:	full qualified name, readable for users
 * hash: sha1 hash created from fqn. (usually) unique if fqn is unique. This is supposed to be used as ID in x3d and json files
 */

FAMIXNamespace:
	'(FAMIX.Namespace'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'parentScope' parentScope=IntegerReference ')')?
	('(' 'iteration' iteration=INT ')')? //ABAP
	')';

FAMIXFileAnchor:
	'(FAMIX.FileAnchor'
	'(' 'id:' name=INT_ID ')'
	('(' 'element' element=IntegerReference ')')?
	'(' 'endLine' endline=INT ')'
	'(' 'fileName' filename=MSESTRING ')'
	'(' 'startLine' startline=INT ')'
	')';

FAMIXClass:
	'(FAMIX.Class'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'container' container=IntegerReference ')')?
	('(' 'isInterface' isInterface=Boolean ')')?
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'modifiers' modifiers+=MSESTRING* ')')?
	('(' 'antipattern' antipattern+=IntegerReference* ')')?
	('(' 'sourceAnchor' type=IntegerReference ')')?
	('(' 'scc' scc=IntegerReference ')')?
	('(' 'numberOfAntipattern' noa=INT ')')?
	('(' 'betweennessCentrality' betweennessCentrality = MSESTRING ')')?
	('(' 'STK-Rank' stkRank = MSESTRING ')')?
	('(' 'iteration' iteration=INT ')')? //ABAP
	')';

FAMIXParameterizableClass:
	'(FAMIX.ParameterizableClass'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'container' container=IntegerReference ')')?
	('(' 'isInterface' isInterface=Boolean ')')?
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'modifiers' modifiers+=MSESTRING* ')')?
	('(' 'sourceAnchor' type=IntegerReference ')')?
	('(' 'numberOfAntipattern' noa = INT ')')?
	('(' 'antipattern' antipattern+=IntegerReference* ')')?
	('(' 'betweennessCentrality' betweennessCentrality = MSESTRING ')')?
	('(' 'STK-Rank' stkRank = MSESTRING ')')?
	')';

FAMIXMethod:
	'(FAMIX.Method'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'antipattern' antipattern = MSESTRING ')')?
	('(' 'cyclomaticComplexity' cyclomaticComplexity=INT ')')?
	('(' 'declaredType' declaredType=IntegerReference ')')?
	('(' 'hasClassScope' hasClassScope=Boolean ')')?
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'kind' kind=MSESTRING ')')?
	('(' 'modifiers' modifiers+=MSESTRING* ')')?
	('(' 'numberOfStatements' numberOfStatements=INT ')')?
	'(' 'parentType' parentType=IntegerReference ')'
	'(' 'signature' signature=MSESTRING ')'
	('(' 'MethodType' MethodType = MethodType ')')?
	('(' 'sourceAnchor' sourceAnchor=IntegerReference ')')?
	('(' 'accessesVariable' accessesVar = IntegerReference ')')?
	('(' 'iteration' iteration=INT ')')? //ABAP
	')';

FAMIXInvocation:
	'(FAMIX.Invocation'
	'(' 'id:' name=INT_ID ')'
	'(' 'candidates' candidates=IntegerReference ')'
	('(' 'previous' previous=IntegerReference ')')?
	('(' 'receiver' receiver=IntegerReference ')')?
	'(' 'sender' sender=IntegerReference ')'
	'(' 'signature' signature=MSESTRING ')'
	')';

FAMIXAttribute:
	'(FAMIX.Attribute'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'declaredType' declaredType=IntegerReference ')')?
	('(' 'hasClassScope' hasClassScope=Boolean ')')?
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'modifiers' modifiers+=MSESTRING* ')')?
	'(' 'parentType' parentType=IntegerReference ')'
	('(' 'sourceAnchor' sourceAnchor=IntegerReference ')')?
	('(' 'getterSetter' getterSetter += IntegerReference* ')')?
	('(' 'dataType' dataType=MSESTRING ')')? //ABAP
	('(' 'dataElement' dataElement=MSESTRING ')')? //ABAP
	('(' 'sourceCodeDefined' sourceCodeDefined=Boolean ')')? //ABAP
	('(' 'iteration' iteration=INT ')')? //ABAP
	')';	

FAMIXAccess:
	'(FAMIX.Access'
	'(' 'id:' name=INT_ID ')'
	'(' 'accessor' accessor=IntegerReference ')'
	('(' 'isWrite' isWrite=Boolean ')')?
	('(' 'previous' previous=IntegerReference ')')?
	'(' 'variable' variable=IntegerReference ')'
	')';

FAMIXPrimitiveType:
	'(FAMIX.PrimitiveType'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'container' container=IntegerReference ')')? // needed for jdt2famix Parser
	'(' 'isStub' isStub=Boolean ')'
	('(' 'modifiers' modifiers+= MSESTRING* ')')?	// needed for jdt2famix Parser
	')';

FAMIXComment:
	'(FAMIX.Comment'
	'(' 'id:' name=INT_ID ')'
	'(' 'container' container=IntegerReference ')'
	'(' 'content' content=MSESTRING ')'
	('(' 'sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXParameter:
	'(FAMIX.Parameter'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'fqn' fqn = MSESTRING ')')?
	'(' 'declaredType' declaredType=IntegerReference ')'
	'(' 'parentBehaviouralEntity' parentBehaviouralEntity=IntegerReference ')'
	')';

FAMIXInheritance:
	'(FAMIX.Inheritance'
	'(' 'id:' name=INT_ID ')'
	('(' 'previous' previous=IntegerReference ')')?
	'(' 'subclass' subclass=IntegerReference ')'
	'(' 'superclass' superclass=IntegerReference ')'
	')';

FAMIXReference:
	'(FAMIX.Reference'
	'(' 'id:' name=INT_ID ')'
	'(' 'source' source=IntegerReference ')'
	'(' 'target' target=IntegerReference ')'
	')';

FAMIXParameterizedType:
	'(FAMIX.ParameterizedType'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'arguments' arguments+=IntegerReference* ')')?
	'(' 'container' container=IntegerReference ')'
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'modifiers' modifiers+= MSESTRING* ')')?  //needed for jdt2famix
	'(' 'parameterizableClass' parameterizableClass=IntegerReference ')'
	')';

FAMIXAnnotationInstance:
	'(FAMIX.AnnotationInstance'
	'(' 'id:' name=INT_ID ')'
	'(' 'annotatedEntity' annotatedEntity=IntegerReference ')'
	'(' 'annotationType' annotationType=IntegerReference ')'
	')';

FAMIXAnnotationInstanceAttribute:
	'(FAMIX.AnnotationInstanceAttribute'
	'(' 'id:' name=INT_ID ')'
	('(' 'annotationTypeAttribute' annotationTypeAttribute=IntegerReference ')')?
	('(' 'parentAnnotationInstance' parentAnnotationInstance=IntegerReference ')' | 
	'(' 'parentAnnotationInstance' ')')?
	'(' 'value' value=MSESTRING ')'
	')';

FAMIXAnnotationType:
	'(FAMIX.AnnotationType'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'container' container=IntegerReference ')')?
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'modifiers' modifiers+=MSESTRING* ')')?
	('(' 'sourceAnchor' sourceAnchor=IntegerReference ')')?
	('(' 'numberOfAntipattern' noa = INT ')')?
	('(' 'antipattern' antipattern+=IntegerReference* ')')?
	('(' 'betweennessCentrality' betweennessCentrality = MSESTRING ')')?
	('(' 'STK-Rank' stkRank = MSESTRING ')')?
	')';

FAMIXAnnotationTypeAttribute:
	'(FAMIX.AnnotationTypeAttribute'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'modifiers' modifiers+=MSESTRING* ')')?
	'(' 'parentType' parentType=IntegerReference ')'
	('(' 'sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXLocalVariable:
	'(FAMIX.LocalVariable'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'declaredType' declaredType=IntegerReference ')')?
	('(' 'isStub' isStub=Boolean ')')?
	'(' 'parentBehaviouralEntity' parentBehaviouralEntity=IntegerReference ')'
	('(' 'sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXImplicitVariable:
	'(FAMIX.ImplicitVariable'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'parentBehaviouralEntity' parentBehaviouralEntity=IntegerReference ')')?
	')';

FAMIXType:
	'(FAMIX.Type'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	'(' 'container' container=IntegerReference ')'
	'(' 'isStub' isStub=Boolean ')'
	')';

FAMIXParameterType:
	'(FAMIX.ParameterType'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'fqn' fqn = MSESTRING ')')?
	'(' 'container' container=IntegerReference ')'
	('(' 'isStub' isStub=Boolean ')')?
	')';

FAMIXJavaSourceLanguage:
	'(FAMIX.JavaSourceLanguage'
	'(' 'id:' name=INT_ID ')'
	')';

FAMIXDeclaredException:
	'(FAMIX.DeclaredException'
	'(' 'id:' name=INT_ID ')'
	'(' 'definingMethod' definingMethod=IntegerReference ')'
	'(' 'exceptionClass' exceptionClass=IntegerReference ')'
	')';

FAMIXThrownException:
	'(FAMIX.ThrownException'
	'(' 'id:' name=INT_ID ')'
	'(' 'definingMethod' definingMethod=IntegerReference ')'
	'(' 'exceptionClass' exceptionClass=IntegerReference ')'
	')';

FAMIXCaughtException:
	'(FAMIX.CaughtException'
	'(' 'id:' name=INT_ID ')'
	'(' 'definingMethod' definingMethod=IntegerReference ')'
	'(' 'exceptionClass' exceptionClass=IntegerReference ')'
	')';

FAMIXEnum:
	'(FAMIX.Enum'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'container' container=IntegerReference ')')?
	('(' 'isStub' isStub=Boolean ')')?
	('(' 'modifiers' modifiers+=MSESTRING* ')')?
	('(' 'sourceAnchor' sourceAnchor=IntegerReference ')')?
	('(' 'numberOfAntipattern' noa = INT ')')?
	('(' 'antipattern' antipattern+=IntegerReference* ')')?
	('(' 'betweennessCentrality' betweennessCentrality = MSESTRING ')')?
	('(' 'STK-Rank' stkRank = MSESTRING ')')?
	')';

FAMIXEnumValue:
	'(FAMIX.EnumValue'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'isStub' isStub=Boolean ')')?
	'(' 'parentEnum' parentEnum=IntegerReference ')'
	')';
	
FAMIXAntipattern:
	'(FAMIX.Antipattern'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'hash' id = STRING ')')?
	('(' 'type' type = MSESTRING ')')?
	('(' 'elements' elements+=IntegerReference* ')')?
	('(' 'components' components+=FutureReference* ')')?
	('(' 'realcomponents' realcomponents+=IntegerReference* ')')?
	('(' 'path' path+=IntegerReference* ')')?
	('(' 'roles' roles+=IntegerReference* ')')?
	('(' 'version' version = MSESTRING')')?
	('(' 'versions' versions += MSESTRING* ')')?
	')';

FAMIXComponent:
	'(FAMIX.Component'
	'(' 'id:' name=INT_ID ')'
	('(' 'hash' id = STRING ')')?
	'(' 'elements' elements+=IntegerReference* ')'
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'components' components+=FutureReference* ')')?
	('(' 'realcomponents' realcomponents+=IntegerReference* ')')?
	('(' 'path' path+=IntegerReference* ')')?
	('(' 'version' version = MSESTRING')')?
	('(' 'versions' versions += MSESTRING* ')')?
	')';

FAMIXRole:
	'(FAMIX.Role'
	'(' 'id:' name = INT_ID')'
	'(' 'role' role = MSESTRING ')'
	'(' 'element' element = IntegerReference ')'
	')';

FAMIXPath:
	'(FAMIX.Path'
	'(' 'id:' name=INT_ID ')'
	('(' 'hash' id = STRING ')')?
	('(' 'role' role = MSESTRING ')')?
	'(' 'start' start = IntegerReference ')'
	'(' 'end' end = IntegerReference ')'
	('(' 'antipattern' antipattern = IntegerReference ')')?
	')';
	
	
	
//	ABAP extensions
FAMIXReport:
    '(FAMIX.Report'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'numberOfStatements' numberOfStatements=INT ')')?
    ('(' 'iteration' iteration=INT ')')? 
    ')';

FAMIXFormroutine:
	'(FAMIX.Formroutine' 
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    ('(' 'declaredType' declaredType=IntegerReference ')')?
    ('(' 'numberOfStatements' numberOfStatements=INT ')')?
    '(' 'parentType' parentType=IntegerReference ')'
    ('(' 'iteration' iteration=INT ')')?
	')';
	    
FAMIXDataElement:
    '(FAMIX.DataElement'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'dataType' datatype=MSESTRING ')')?
    ('(' 'domain' domain=MSESTRING ')')? 
    ('(' 'iteration' iteration=INT ')')? 
    ')';  
    
/*FAMIXVirtualDomain:
	'(FAMIXVirtualDomain'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'dataElement' dataElement=IntegerReference ')')?    
	('(' 'iteration' iteration=INT ')')?
    ')';	
    */

FAMIXDomain:
    '(FAMIX.Domain'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'dataType' datatype=MSESTRING ')')?
    ('(' 'length' length=MSESTRING ')')?
    ('(' 'decimals' decimals=MSESTRING ')')?
    ('(' 'iteration' iteration=INT ')')? 
    ')';  
    
FAMIXTable:
    '(FAMIX.Table'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'numberOfColumns' numberOfColumns=INT ')')?
    ('(' 'rowCategory' rowCategory=INT ')')?
    ('(' 'iteration' iteration=INT ')')? 
    ')';
    
FAMIXTableElement:
    '(FAMIX.TableElement'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'dataElement' dataElement=MSESTRING ')')?
    ('(' 'structure' structure=MSESTRING ')')?
    ('(' 'iteration' iteration=INT ')')?
    ')';

FAMIXABAPStruc:
    '(FAMIX.ABAPStructure'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'iteration' iteration=INT ')')? 
    ')';
        
FAMIXStrucElement:
    '(FAMIX.StrucElement'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'dataType' datatype=MSESTRING ')')?
    ('(' 'declaredType' declaredType=IntegerReference ')')?
    ('(' 'dataElement' dataElement=MSESTRING ')')?
    ('(' 'structure' structure=MSESTRING ')')?
    ('(' 'iteration' iteration=INT ')')? 
    ')'; 
        
FAMIXTableType:
	'(FAMIX.TableType'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'numberOfColumns' numberOfColumns=INT ')')?
    ('(' 'rowType' rowType=MSESTRING ')')?
    ('(' 'rowCategory' rowCategory=INT ')')?
    ('(' 'iteration' iteration=INT ')')? 
    ')';

FAMIXTableTypeElement:
	'(FAMIX.TableTypeElement'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')
    '(' 'container' container=IntegerReference ')'
    ('(' 'tableType' tableType=IntegerReference ')')?
    ('(' 'iteration' iteration=INT ')')? 
    ')';   
    
FAMIXFunctionGroup:
    '(FAMIX.FunctionGroup'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'modifiers' modifiers+=MSESTRING* ')')? // for structures class, not used in ABAP
    ('(' 'betweennessCentrality' betweennessCentrality = MSESTRING ')')? // for structures class, not used in ABAP
	('(' 'STK-Rank' stkRank = MSESTRING ')')? // for structures class, not used in ABAP
    ('(' 'iteration' iteration=INT ')')? 
    ')';    

FAMIXFunctionModule:
    '(FAMIX.FunctionModule'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    ('(' 'declaredType' declaredType=IntegerReference ')')?
    ('(' 'numberOfStatements' numberOfStatements=INT ')')?
    '(' 'parentType' parentType=IntegerReference ')'
    ('(' 'iteration' iteration=INT ')')?
    ')';
	
FAMIXMacro:
	'(FAMIX.Macro'
	'(' 'id:' name=INT_ID ')'
	'(' 'name' value=MSESTRING ')'
	('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    ('(' 'declaredType' declaredType=IntegerReference ')')?
    ('(' 'numberOfStatements' numberOfStatements=INT ')')?
    ('(' 'parentType' parentType=IntegerReference ')')?
    '(' 'defined' defined=Boolean ')'
    '(' 'called' called=Boolean ')'
    '(' 'amountOfCalls' amountOfCalls=INT ')'
    '(' 'redefined' redefined=Boolean ')'
    '(' 'nested' nested=Boolean ')'
    ('(' 'iteration' iteration=INT ')')?
	')';
	
FAMIXTypeOf:
	'(FAMIX.TypeOf'
	'(' 'id:' name=INT_ID ')'
	('(' 'fqn' fqn = MSESTRING ')')?
	('(' 'element' element=IntegerReference ')')
	('(' 'typeOf' typeOf=IntegerReference ')')
	')';
	

FAMIXMessageClass:
    '(FAMIX.MessageClass'
    '(' 'id:' name=INT_ID ')'
    '(' 'name' value=MSESTRING ')'
    ('(' 'hash' id = STRING ')')?
    ('(' 'fqn' fqn = MSESTRING ')')?
    '(' 'container' container=IntegerReference ')'
    ('(' 'modifiers' modifiers+=MSESTRING* ')')? // for structures class, not used in ABAP
    ('(' 'betweennessCentrality' betweennessCentrality = MSESTRING ')')? // for structures class, not used in ABAP
	('(' 'STK-Rank' stkRank = MSESTRING ')')? // for structures class, not used in ABAP
    ('(' 'numberOfMessages' numberOfMessages=INT ')')?
    ('(' 'iteration' iteration=INT ')')? 
    ')';    
// End of ABAP extensions     
    
    
    	
	
enum MethodType:
	Unknown | Setter | Getter | Constructor;	

Boolean:
	'true' | 'false';
	
IntegerReference:
	'(' 'ref:' ref=[FAMIXElement|INT_ID] ')';
	
FutureReference:
	'(' 'ref:' ref= INT_ID ')';

INT_ID returns ecore::EString:
	'^'? INT;

terminal MSESTRING:
	("'"->"'")*;
