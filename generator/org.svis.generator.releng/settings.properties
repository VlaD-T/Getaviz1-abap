# Possible values are x3d(default), x3dom, x3d_compressed, aframe, simple_glyphs_json
output_format = x3d
database_name = ../databases/graph.db
generator.generateJSON = true

#
## History
history.repository_nameReekX3DHeightTest.properties
history.repository_owner

#
## FAMIX CONFIGS 

structure.merge_packages = false

# If set to true, will search for anchors (cleaning everything that's not connected)
structure.has_anchors = false

# If set true there will be one root package which contains all the other root packages
structure.master_root = false

# If set true all private Elements will not be shown in visualization
# This includes methods, attributes and structures
# This boolean also affects the METHOD_TYPE_MODE in RDSettings.java
# If both is set true private attributes without getters or setters will 
# be hidden as well as inner classes and methods
structure.hide_private_elements = false

# If set true attributes will be sorted lengthwise, longest value first in descending order 
structure.attribute_sort_size = false

# The type of parser that reads artifacts and parse to famix model
# Possible values are verveinej (default), jdt2famix and abap
structure.parser = abap


#
## CITY CONFIGS 

# Possible values are original (default), panels, bricks, floor, dynamic
city.building_type = floor
# The active mode to structure
# The active mode to structure and color the methods and attributes.
# Possible values are 
# types (default): The class elements are sorted and colored associated to type/functionality of the method.
# visibility: The class elements are sorted and colored corresponding to there visibility modifiers.
city.scheme = types

# Switch to control the elements of the classes to show.
# Possible values are methods_and_attributes (default), methods_only, attributes_only
city.class_elements_mode = methods_and_attributes

# Possible values are methods_first (default), unsorted, attributes_first
city.class_elements_sort_mode_coarse = methods_first

# The active mode, how to sort the methods or attributes separately among each other
# This means a method is only compared to another method and an attribute is only
# compared to another attribute in this comparison, according their values.
# If it is set to scheme, a secondary sorting is performed to place methods 
# with high numbers of statements to the bottom.
# Possible values are scheme (default), unsorted, alphabetically, nos
city.class_elements_sort_mode_fine = scheme

# If set true, the order of the sorting, defined in class_elements_sort_mode_fide is reversed.
# If class_elements_sort_mode_fide is set to scheme, a secondary sorting is performed to place 
#methods with high numbers of statements to the bottom. This behavior isn't influenced by this switch.
city.class_elements_sort_mode_fine_direction_reversed = false

# Switch to show or hide building base in panels, bricks or floor mode.
# If set to false, only districts and buildingSegments are visible.
city.building_base = true

# Switch for showing attributes as cylinders instead of boxes.
# This setting has only an affect in panels-mode.
city.show_attributes_as_cylinders = true
city.attributes_height = 0.5
# Show empty Districts (no child elements)
city.show_empty_districts = false

# The active mode for the layout of the bricks/methods.
# This setting has only an affect in brick-mode.
# Possible values are progressive (default), straight, balanced 
city.brick.layout = progressive

city.brick.size = 1.0
city.brick.horizontal_margin = 0.5 
city.brick.horizontal_gap = 0.2
city.brick.vertical_margin = 0.2
city.brick.vertical_gap = 0.2

# The active mode for the area between panels/methods.
# Possible values are 
# separator (default): Between the panels separators are placed with a fix height and color.
# none: No space between the panels and they are placed on top of each other.
# gap: The panels have a free space between them and don't touch each other.
city.panel.separator_mode = separator

# Multiplier for height of a panel, declared in panel.height_unit. The elements of this array 
# are threshold values for the number of statements inside the method and are multiplied with the 
# index+1, so the product will be the actual height of the panel.
# The values are inclusive.
# Comment property out to use default value (is 3, 6, 12, 24, 48, 96, 144, 192, 240)
city.panel.height_treshold_nos = 3, 6, 12, 24, 48, 96, 144, 192, 240

## Measurements Panels

# Height is multiplied by panel.height_treshold_nos 
city.panel.height_unit = 0.5

city.panel.horizontal_margin = 0.5
city.panel.vertical_margin = 0.25
city.panel.vertical_gap = 0.125
city.panel.separator_height = 0.125

# Possible values are none (default) and nos
city.original_building_metric = none

city.width_min = 1
city.height_min = 1
city.building.horizontal_margin = 3.0
city.building.horizontal_gap = 3.0
city.building.vertical_margin = 1.0

city.package.color_start = #969696
city.package.color_end = #f0f0f0 
city.class.color_start = #131615
city.class.color_end = #00ff00
city.class.color = #353559

# Dynamic City colors
city.dynamic.class.color_start = #fa965c
city.dynamic.class.color_end = #feb280
city.dynamic.method.color = #735eb9
city.dynamic.package.color_start = #23862c
city.dynamic.package.color_end = #7bcd8d

city.color.blue = #99FFCC
city.color.aqua = #99CCFF
city.color.light_green = #CCFF99
city.color.dark_green = #99FF99
city.color.yellow = #ffff99
city.color.orange = #FFCC99
city.color.red = #FF9999
city.color.pink = #FF99FF
city.color.violet = #9999FF
city.color.light_grey = #CCCCCC
city.color.dark_grey = #999999
city.color.white = #FFFFFF
city.color.black = #000000


#
## ABAP CONFIGS 

# !!! Additional settings for appearance are in "settings-abap_appearance.properties" 

# Way to represent ABAP city (only in floor modus). 
# simple - uses simple 3d objects to create a city
# advanced - builds mode advanced city
city.abap_representation_mode = advanced
city.abap.useLights = false

#advanced mode sets
#CustomModels: custom models
#SimpleBlocks: simple x3d shapes
#SimpleTexturedBlocks: simple x3d shapes with textures
city.abapAdvCity_set = CustomModels

#sorted - shows all dataElements sorted by the domains (which aren't in original namespace) they are using
#unsorted - shows all dataElements in one district which are using domains that aren't in original namespace
city.abap_dtelsorting_mode = unsorted

#noscaling   - the height of the SCO is only determined by the corresponding metric (currently Number of Statements)
#interval	 - the height, which is bigger/smaller than the upper/lower limit, are scaled to a maximum/minimum height 
#logarithmic - the logarithm of the height will be calculated and rounded up
city.abap_height_scaling = interval

city.abap_sco_min_height = 1
city.abap_sco_max_height = 30

city.abap_logarithm_base = 2

#old - districts are arranged by the "LightMap" algorithm
#new - districts are arranged by the modificated "LightMap" algorithm  
city.abap_district_layout = old

#Attributes configs
# Showing special districts in advanced mode
city.abap.showTables = true 
city.abap.showInterfaceDistrict = true
city.abap.showClassDistrict = true
city.abap.showFuGrDistrict = true
city.abap.showDomainDistrict = true
city.abap.showStructureDistrict = true
city.abap.showDtelDistrict = true
city.abap.showReportDistrict = true

# Showing special elements in advanced mode 
city.abap.showInterface = true
city.abap.showInterfaceAttributes = false 
city.abap.showMethod = true
city.abap.showClassAttributes = true 
city.abap.showFuGrAttributes = true
city.abap.showFumo = true
city.abap.showDomain = true
city.abap.showStructure = true
city.abap.showTableType = true
city.abap.showDtel = true
city.abap.showReport = true
city.abap.showReportAdvAttributes = false
city.abap.showForm = true

#Attributes configs - simple mode 
city.abap.attributesBelowBuildings = false
city.abap.attributesBelowBuildingsHeight = 2
city.abap.showReportAttributes = true
city.abap.showFugrAttributes = true
city.abap.strucElemHeight = 1.5
city.abap.tablesOwnDistrict = true

#Additional parameters for "not in origin" elements
#scBuldings: report, class, interface, functionGroup
#not in origin filter: transparent, colored, filtered, default
city.abap.notInOrigin_filter = default
city.abap.notInOrigin_color = #cccccc
city.abap.notInOrigin_transparent_value = 0.8
city.abap.notInOrigin_min_scBuilding_height = 2


#
## RD CONFIGS 

rd.data_factor = 4.0
rd.method_factor = 1.0
rd.height = 1.0
rd.height_boost = 8
rd.height_multiplicator = 50.0
rd.ring_width = 2.0

# Sets the ring width of the method disks
# Only relevant if disk of type FAMIX.Method exist
rd.ring_width_md = 0

# Equal to ring_width_md but for attribute disks
rd.ring_with_ad = 0
rd.min_area = 10.0
rd.namespace_transparency = 0
rd.class_transparency = 0
rd.method_transparency = 0
rd.data_transparency = 0
# 53/255.0 + " " + 53/255.0 + " " + 89/255.0
rd.color.class = #353559
# 255/255.0 + " " + 252/255.0 + " " + 25/255.0
rd.color.data = #fffc19
# 20/255.0 + " " + 133/255.0 + " " + 204/255.0
rd.color.method = #1485cc
# 150/255.0 + " " + 150/255.0 + " " + 150/255.0
rd.color.namespace = #969696
# 120/255.0 + " " + 10/255.0 + " " + 50/255.0
rd.color.method_invocation = #780a32

# If true the Methods will be visualized as Disks instead of DiskSegments.
rd.method_disks = false

# If true Attributes will be visualized as disks.
rd.data_disks = false

# If set true visualization will be based on the method type
# Check HIDE_PRIVATE_ELEMENTS in FAMIXSettings for visualization of Privates
rd.method_type_mode = false

# Depending on the value set metrics will not represented, by height or in a dynamic way 
# which can either be Luminance or Frequency.
# Output Files differ depending on the value chosen.
# Possible values are none (default), height, luminance, frequency
rd.metric_representation = none	

# Depending on this Variable the Dynamix Visualization will be created,
# it can either be in a static or dynamic way.
# Possible values are none (default), moving_spheres, flashing_methods, moving_flashing
rd.invocation_representation = none

# Sets in which way the Historic Evolution of the analyzed Software should be represented, 
# it can either be in a static or dynamic way.
# Possible values are time_line (default), dynamic_evolution, multiple_time_line, multiple_dynamic_evolution
rd.evolution_representation = time_line

# Possible values are static (default) and dynamic
rd.variant = static	


#
## PLANT CONFIGS 

# Possible value are petal_pollstem (default) and pollstem_petal
plant.switch_attribute_method_mapping = petal_pollstem
plant.area_height = 3.5
plant.stem.thickness = 3.0
plant.stem.height = 6.0
plant.cron.height = 2.0
plant.cron.head_height = 0.5
plant.petal.angle = 0.5236
plant.petal.distance_multiplier = 3.0
plant.pollstem.angle = 0.05
plant.pollstem.angle_distance_multiplier = 0.3
plant.pollstem.ball_multiplier = 1.57
plant.junction.angle = 1.3
plant.junction.distance_multiplier = 8.0
plant.junction.pollstem.ball_multiplier = 0.10

# Stuff from city for the layout algorithm
plant.width_min = 1.0
plant.height_min = 1.0
plant.building.horizontal_margin = 3.0
plant.building.horizontal_gap = 7.0
plant.building.vertical_margin = 1.0

# Possible values are default (default) and cylinder
plant.package.shape = default
plant.package.use_textures = true
plant.package.odd_texture = <ImageTexture url='pics/ground.png' scale='false' />
plant.package.even_texture = <ImageTexture url='pics/freeGrass.png' scale='false' />
plant.package.odd_color = #964327
plant.package.even_color = #30ba43

# Possbile values are default (default), realistic, without_head
plant.class.shape = default
plant.class.size = count_attributes_and_methods
plant.class.use_textures = false
plant.class.texture = <ImageTexture url='pics/plant.png' scale='true' />
plant.class.texture_head_brown = <ImageTexture url='pics/plantHeadBrown.png' scale='false' />
plant.class.texture_bloom = <ImageTexture url='pics/bloom.png' scale='false' />
plant.class.color = #34663b
plant.class.color02 = #8b4413
plant.class.color03 = #ffff00

# Possible values are default (default) and realistic
plant.inner_class.shape = default
plant.inner_class.use_textures = false
plant.inner_class.texture = <ImageTexture url='pics/plant.png' scale='true' />
plant.inner_class.texture_junction_head_top_part = <ImageTexture url='pics/junctionHeadTopPart.png' scale='false' />
plant.inner_class.texture_bloom = <ImageTexture url='pics/bloom.png' scale='false' />
plant.inner_class.color = #329c3c
plant.inner_class.color02 = #8b4413
plant.inner_class.color03 = #ffff00

# Possible values are realistic_petal (default), default, default_with_cylinder
plant.attribute.shape = realistic_petal
plant.attribute.show = true
plant.attribute.use_textures = true
plant.attribute.texture = <ImageTexture url='pics/lilacPetal.png' scale='false' />
plant.attribute.color = #8a3398

# Possible values are default (default), realistic_petal, default_with_cylinder
plant.inner_class_attribute.shape = default
plant.inner_class_attribute.texture = <ImageTexture url='pics/lilacPetal.png' scale='false' />
plant.inner_class_attribute.color = #ab2626

# Possible values are default (default), stick, sphere, pollpetal
plant.method.shape = default
plant.method.show = true
plant.method.use_textures = true
plant.method.texture = <ImageTexture url='pics/junctionGreen.png' scale='false' />
plant.method.texture_pollball = <ImageTexture url='pics/pollball.png' scale='false' />
plant.method.color = #00FF00
plant.method.color02 = #FFFF00

# Possible values are default (default), stick, sphere, pollpetal
plant.inner_class_method.shape = default
plant.inner_class_method.texture = <ImageTexture url='pics/bloom.png' scale='false' />
plant.inner_class_method.color = #8b4413
